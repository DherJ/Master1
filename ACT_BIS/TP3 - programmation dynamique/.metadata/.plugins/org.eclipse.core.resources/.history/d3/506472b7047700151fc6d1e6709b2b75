package tp.main;

import java.util.List;

public class Main {
	
	static int m, n, i, j;
	
	public static int [] parseCommandLine(String[] args) {
		int result [] = new int [4];
		String[] parts;
		for(String s : args) {
			parts = s.split("=");
			switch(parts[0]) {
			case "-m" :
				m = Integer.parseInt(parts[1]);
				break;
			case "-n" :
				n = Integer.parseInt(parts[1]);
				break;
			case "-i" :
				i = Integer.parseInt(parts[1]);
				break;
			case "-j" :
				j = Integer.parseInt(parts[1]);
				break;
			}
		}
		return result;
	}

	
	public static void main(String[] args) {
		// format of the arguments for the execution : -m=? -n=? -i=? -j=?
		// arguments[0] = m, arguments[1] = n, arguments[2] = i, arguments[3] = j
		int arguments [] = parseCommandLine(args);
		int m = arguments[0];
		int n = arguments[1];
		int i = arguments[2];
		int j = arguments[3];
		System.out.println("m = " + arguments[0]);
		System.out.println("n = " + arguments[1]);
		System.out.println("i = " + arguments[2]);
		System.out.println("j = " + arguments[3]);
		
		testFunctionFindValue127(127, 127, 50, 50);
	}
	
	static public void launchGraphicGame(int m, int n, int i, int j){
		Game game = new Game(m, n, i, j);
		game.beginGame();
	}
	
	static public void testFunctionFindValue127(int m, int n, int i, int j){
		System.out.println("Start looking for value 127 in 127x127 table...");
		int[][][][] tab = new int [128][128][128][128];
		Tablet t = new Tablet(m,n,i,j,tab);
		long begin = System.nanoTime();
		List<Quadruple> list = t.getQuadraEgalVal(127);
		long end = System.nanoTime();
		for(Quadruple q : list) {
			System.out.println(q.toString());
		}
		System.out.println("Time: " + ((end-begin)*Math.pow(10, -9)) + "s");
	}
}