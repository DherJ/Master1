CC = gcc 
FLAGS = -m32 -o
CFLAGS = -W -Wall -pedantic -ansi -g
LIBS = -L./ -lhardware

SRC	= $(wildcard *.c)
OBJ	= $(SRC:.c=.o)

all: main

main: main.o drive.o dmps.o mbr.o volume.o frmt.o bloc2.o
	$(CC) $(FLAGS) main main.o drive.o dmps.o mbr.o volume.o frmt.o bloc2.o $(LIBS)

drive.o: drive.c drive.h common.h hardware.h
	$(CC) $(FLAGS) drive.o -c drive.c 

dmps.o: dmps.c common.h drive.h hardware.h
	$(CC) $(FLAGS) dmps.o -c dmps.c 

mbr.o: mbr.c common.h drive.h mbr.h hardware.h
	$(CC) $(FLAGS) mbr.o -c mbr.c 

volume.o: volume.c volume.h mbr.h drive.h common.h hardware.h
	$(CC) $(FLAGS) volume.o -c volume.c 

frmt.o: frmt.c common.h drive.h hardware.h
	$(CC) $(FLAGS) frmt.o -c frmt.c

bloc2.o: bloc2.c bloc2.h common.h drive.h mbr.h hardware.h
	$(CC) $(FLAGS) bloc2.o -c bloc2.c

main.o: main.c volume.h mbr.h drive.h common.h hardware.h
	$(CC) $(FLAGS) main.o -c main.c

%.o: %.c
	$(CC) -o $@ -c $< $(CFLAGS)

#Run program
run:	
	./main

.PHONY: clean realclean
clean:
	$(RM) *.o main
realclean: clean 
	$(RM) vdiskA.bin vdiskB.bin
